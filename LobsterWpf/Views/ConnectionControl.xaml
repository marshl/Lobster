<UserControl x:Class="LobsterWpf.Views.ConnectionControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:LobsterWpf.Views"
             mc:Ignorable="d" MinHeight="325" MinWidth="600">

  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="*"/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>

    <Grid Grid.Row="0" IsEnabled="{Binding IsEnabled, FallbackValue=false}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="1*"/>
        <ColumnDefinition Width="3*"/>
      </Grid.ColumnDefinitions>
      <ListBox Name="directoryWatcherListBox" Grid.Column="0" Grid.Row="1" ItemsSource="{Binding DirectoryWatchers}" SelectionChanged="DirectoryWatcherListBox_SelectionChanged">
        <ListBox.ItemTemplate>
          <DataTemplate DataType="DirectoryWatcherView">
            <DataTemplate.Resources>
              <Style TargetType="{x:Type TextBlock}">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding DirectoryExists}" Value="False">
                    <Setter Property="Foreground" Value="Red"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </DataTemplate.Resources>
            <StackPanel Orientation="Horizontal">
              <StackPanel Orientation="Vertical">
                <TextBlock Text="{Binding Name}" FontWeight="Bold"/>
                <TextBlock Text="{Binding Directory}" FontStyle="Italic" FontSize="10.667"/>
              </StackPanel>
            </StackPanel>
          </DataTemplate>
        </ListBox.ItemTemplate>
      </ListBox>
      <GridSplitter x:Name="gridSplitter" HorizontalAlignment="Left" Grid.Column="1" Width="5"/>
      <Grid Grid.Column="2" Margin="5,0,0,0" Background="{StaticResource BackgroundKey}">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="65"/>
          <ColumnDefinition Width="1*"/>
          <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <GridSplitter x:Name="gridSplitter1" HorizontalAlignment="Left" Width="5" Grid.Column="2"/>
        <Grid Grid.Column="1" Background="{StaticResource BackgroundKey}">
          <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="35"/>
            <RowDefinition Height="35"/>
          </Grid.RowDefinitions>
          <TreeView Grid.Row="0" Name="fileTree" SelectedItemChanged="FileTree_SelectedItemChanged" Background="{StaticResource BackgroundKey}" ItemsSource="{Binding}">
            <TreeView.ItemContainerStyle>
              <Style TargetType="{x:Type TreeViewItem}">
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
              </Style>
            </TreeView.ItemContainerStyle>
            <TreeView.ItemTemplate>
              <HierarchicalDataTemplate ItemsSource="{Binding Path=ChildNodes}">
                <StackPanel Orientation="Horizontal">
                  <Image Source="{Binding ImageUrl}" Height="18"/>
                  <TextBlock Text="{Binding Path=FileName}" Foreground="{Binding Path=ForegroundColour}"/>
                </StackPanel>
              </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
          </TreeView>
          <StackPanel Grid.Row="1" Orientation="Horizontal">
            <RadioButton x:Name="LocalOnlyFilesRadio" Content="Local Files" Margin="5" HorizontalAlignment="Left" IsChecked="True" Checked="OnToggleViewModeRadioClicked" ToolTip="Shows the local directory tree, mapped to database rows if they exist (database only files are not shown)"/>
            <RadioButton x:Name="databaseOnlyFilesRadio" Content="Database Files" Margin="5" HorizontalAlignment="Right" Checked="OnToggleViewModeRadioClicked" ToolTip="Shows all rows in the database as a list, mapped to local files if they exist (local only files are not shown)"/>
          </StackPanel>
          <CheckBox x:Name="showReadOnlyFilesCheckbox" Grid.Row="2" Content="Show Readonly Files" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5" Checked="HideReadonlyCheckbox_Toggled" Unchecked="HideReadonlyCheckbox_Toggled" IsChecked="{Binding Path=ShowReadOnlyFiles, Mode=TwoWay}" ToolTip="Whether to show files that are locked or not. "/>
        </Grid>
        <StackPanel Background="{StaticResource BackgroundKey}">
          <Button x:Name="pushButton" Grid.Column="0" Height="65" Margin="0" Click="PushButton_Click" IsEnabled="{Binding Path=SelectedNode.CanBeUpdated, FallbackValue=false}" ToolTip="Updates the database file with the version on your computer.">
            <StackPanel>
              <Image Source="{DynamicResource PushImageSource}" VerticalAlignment="Top" Height="30"/>
              <TextBlock HorizontalAlignment="Center" MinHeight="15" VerticalAlignment="Bottom">Push</TextBlock>
            </StackPanel>
          </Button>
          <Button Grid.Column="0" Height="65" Click="PullButton_Click" IsEnabled="{Binding Path=SelectedNode.CanBeDownloaded, FallbackValue=false}" ToolTip="Downloads the file from the database and opens it.">
            <StackPanel>
              <Image Source="{DynamicResource PullImageSource}" VerticalAlignment="Top" Height="30"/>
              <TextBlock HorizontalAlignment="Center" MinHeight="15" VerticalAlignment="Bottom">Pull</TextBlock>
            </StackPanel>
          </Button>
          <Button x:Name="diffButton" Grid.Column="0" Height="65" Click="DiffButton_Click" IsEnabled="{Binding Path=SelectedNode.CanBeCompared, FallbackValue=false}" ToolTip="Downloads the file from the database and compares it with the version on your computer.">
            <StackPanel>
              <Image Source="{DynamicResource MergeImageSource}" VerticalAlignment="Top" Height="30"/>
              <TextBlock HorizontalAlignment="Center" MinHeight="15" VerticalAlignment="Bottom">Diff</TextBlock>
            </StackPanel>
          </Button>
          <Button x:Name="exploreButton" Grid.Column="0" Height="65" Click="ExploreButton_Click" IsEnabled="{Binding Path=SelectedNode.CanBeExploredTo, FallbackValue=false}" ToolTip="Shows the location of the file in Windows Explorer.">
            <StackPanel>
              <Image Source="{DynamicResource FolderImageSource}" VerticalAlignment="Top" Height="30"/>
              <TextBlock HorizontalAlignment="Center" MinHeight="15" VerticalAlignment="Bottom">Explore</TextBlock>
            </StackPanel>
          </Button>
          <Button x:Name="insertButton" Grid.Column="0" Height="65" Click="InsertButton_Click" IsEnabled="{Binding Path=SelectedNode.CanBeInserted, FallbackValue=false}" ToolTip="Inserts the file as a new record in the database.">
            <StackPanel>
              <Image Source="{DynamicResource InsertImageSource}" VerticalAlignment="Top" Height="30"/>
              <TextBlock HorizontalAlignment="Center" MinHeight="15" VerticalAlignment="Bottom">Insert</TextBlock>
            </StackPanel>
          </Button>
          <Button x:Name="deleteButton" Grid.Column="0" Height="65" Click="DeleteButton_Click" IsEnabled="{Binding Path=SelectedNode.CanBeDeleted, FallbackValue=false}" ToolTip="Deletes the database record for the file.">
            <StackPanel>
              <Image Source="{DynamicResource DeleteImageSource}" VerticalAlignment="Top" Height="30"/>
              <TextBlock HorizontalAlignment="Center" MinHeight="15" VerticalAlignment="Bottom">Delete</TextBlock>
            </StackPanel>
          </Button>
        </StackPanel>
        <GridSplitter x:Name="gridSplitter2" HorizontalAlignment="Left" Width="5" Grid.Column="2"/>

        <Grid Grid.Column="2" Margin="5,0,0,0">
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
          <TextBlock Foreground="#FFBABABA" Grid.Row="0" FontSize="16" Margin="5">
            <TextBlock.Text>
              <MultiBinding StringFormat="Backups for: {0}" FallbackValue="Backups">
                <Binding Path="SelectedFileNode.Name"/>
              </MultiBinding>
            </TextBlock.Text>
          </TextBlock>
          <ListBox ItemsSource="{Binding SelectedFileNode.FileBackupList}" Grid.Row="1">
            <ListBox.ItemContainerStyle>
              <Style TargetType="{x:Type ListBoxItem}">
                <Setter Property="Focusable" Value="False"/>
              </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
              <DataTemplate>
                <StackPanel Orientation="Horizontal">
                  <Button Click="PushBackupButton_Click">
                    <Image Source="{DynamicResource PushImageSource}" Width="25"/>
                  </Button>
                  <Button Click="OpenBackupButton_Click">
                    <Image Source="{DynamicResource FolderImageSource}" Width="25"/>
                  </Button>
                  <TextBlock Text="{Binding Path=DateCreated, StringFormat=yyyy-MM-dd HH:mm:ss.fff}" FontWeight="Bold"/>
                </StackPanel>
              </DataTemplate>
            </ListBox.ItemTemplate>
          </ListBox>
        </Grid>
      </Grid>
    </Grid>
    <Grid Grid.Row="1">
      <StatusBar DataContext="{Binding SelectedNode}">
        <StatusBar.ItemsPanel>
          <ItemsPanelTemplate>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="50" />
              </Grid.ColumnDefinitions>
            </Grid>
          </ItemsPanelTemplate>
        </StatusBar.ItemsPanel>
        <StatusBarItem Grid.Column="0">
          <TextBlock Text="{Binding FilePath}"/>
        </StatusBarItem>
        <StatusBarItem Grid.Column="1" HorizontalContentAlignment="Right">
          <TextBlock>
            <TextBlock.Text>
              <MultiBinding StringFormat="Last Modified: {0:MM/dd/yyyy}">
                <Binding Path="LastWriteTime" />
              </MultiBinding>
            </TextBlock.Text>
          </TextBlock>
        </StatusBarItem>
        <StatusBarItem Grid.Column="2" HorizontalContentAlignment="Right">
          <TextBlock Text="{Binding FileSize}"/>
        </StatusBarItem>
      </StatusBar>
    </Grid>
  </Grid>
</UserControl>
