<Window x:Class="LobsterWpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LobsterWpf"
        mc:Ignorable="d"
        Title="Lobster" Height="600" Width="800" Loaded="Window_Loaded" Icon="Resources/Images/cartoon-lobster.ico" MinWidth="640" MinHeight="480">
    <Grid x:Name="ConnectionContainer">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Menu>
                <MenuItem Header="_File">
                    <MenuItem Header="Connections" Click="MenuItem_Click" />
                    <Separator/>
                    <MenuItem Header="_Exit" Click="MenuItem_Click_1" />
                </MenuItem>
                <MenuItem Header="_Connection" IsEnabled="{Binding IsEnabled, FallbackValue=false}">
                    <MenuItem Header="Update Files Automatically" IsCheckable="True" IsChecked="{Binding Path=IsAutoUpdateEnabled, FallbackValue=True}"/>
                    <MenuItem Header="Requery Database" Click="MenuItem_Click_2"/>
                </MenuItem>
            </Menu>
        </Grid>
        <Grid Grid.Row="1" IsEnabled="{Binding IsEnabled, FallbackValue=false}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="3*"/>
            </Grid.ColumnDefinitions>
            <ListBox Name="clobTypeListBox" Grid.Column="0" Grid.Row="1" ItemsSource="{Binding ClobTypes}" SelectionChanged="clobTypeListBox_SelectionChanged">
                <ListBox.ItemTemplate>
                    <DataTemplate DataType="ClobType">
                        <StackPanel>
                            <TextBlock Text="{Binding Name}" FontWeight="Bold"/>
                            <TextBlock Text="{Binding Directory}" FontStyle="Italic"/>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <GridSplitter x:Name="gridSplitter" HorizontalAlignment="Left" Grid.Column="1" Width="5"/>
            <Grid Background="#FFE5E5E5" Grid.Column="2" Margin="5,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <GridSplitter x:Name="gridSplitter1" HorizontalAlignment="Left" Width="5" Grid.Column="2"/>
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                    </Grid.RowDefinitions>
                    
                    <TreeView Name="localFileTreeView" ItemsSource="{Binding RootFile}" Grid.Row="0" SelectedItemChanged="localFileTreeView_SelectedItemChanged">
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type local:FileNodeView}" ItemsSource="{Binding Children}">
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{Binding Path=ImageUrl}" Height="18"/>
                                    <TextBlock Text="{Binding Path=Name}" Foreground="{Binding Path=ForegroundColour}"  VerticalAlignment="Center"/>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                    </TreeView>
                    <StackPanel Grid.Row="1" Orientation="Horizontal">
                        <RadioButton x:Name="LocalOnlyFilesRadio" Content="Local Files" Margin="5" HorizontalAlignment="Left" IsChecked="True" Checked="OnToggleViewModeRadioClicked"/>
                        <RadioButton x:Name="databaseOnlyFilesRadio" Content="Database Files" Margin="5" HorizontalAlignment="Right" Checked="OnToggleViewModeRadioClicked"/>
                    </StackPanel>
                    <CheckBox x:Name="showReadOnlyFilesCheckbox" Grid.Row="2" Content="Show Readonly Files" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5" Checked="hideReadonlyCheckbox_Checked" Unchecked="hideReadonlyCheckbox_Unchecked" IsChecked="{Binding Path=ShowReadOnlyFiles, Mode=TwoWay}"/>
                </Grid>
                <StackPanel>
                    <Button x:Name="pushButton" Grid.Column="0" MaxHeight="50" Margin="0" Click="pushButton_Click" IsEnabled="{Binding Path=SelectedFileNode.CanBeUpdated, FallbackValue=false}">
                        <StackPanel MaxHeight="50">
                            <Image Source="{DynamicResource PushImageSource}" VerticalAlignment="Top" Height="30"/>
                            <TextBlock HorizontalAlignment="Center" MinHeight="15" VerticalAlignment="Bottom">Push</TextBlock>
                        </StackPanel>
                    </Button>
                    <Button x:Name="diffButton" Grid.Column="0" MaxHeight="50" Click="diffButton_Click" IsEnabled="{Binding Path=SelectedFileNode.CanBeDiffed, FallbackValue=false}">
                        <StackPanel MaxHeight="50">
                            <Image Source="{DynamicResource MergeImageSource}" VerticalAlignment="Top" Height="30"/>
                            <TextBlock HorizontalAlignment="Center" MinHeight="15" VerticalAlignment="Bottom">Diff</TextBlock>
                        </StackPanel>
                    </Button>
                    <Button x:Name="exploreButton" Grid.Column="0" MaxHeight="50" Click="exploreButton_Click" IsEnabled="{Binding Path=SelectedFileNode.CanBeExploredTo, FallbackValue=false}">
                        <StackPanel MaxHeight="50">
                            <Image Source="{DynamicResource FolderImageSource}" VerticalAlignment="Top" Height="30"/>
                            <TextBlock HorizontalAlignment="Center" MinHeight="15" VerticalAlignment="Bottom">Explore</TextBlock>
                        </StackPanel>
                    </Button>
                    <Button x:Name="insertButton" Grid.Column="0" MaxHeight="50" Click="insertButton_Click" IsEnabled="{Binding Path=SelectedFileNode.CanBeInserted, FallbackValue=false}">
                        <StackPanel MaxHeight="50">
                            <Image Source="{DynamicResource InsertImageSource}" VerticalAlignment="Top" Height="30"/>
                            <TextBlock HorizontalAlignment="Center" MinHeight="15" VerticalAlignment="Bottom">Insert</TextBlock>
                        </StackPanel>
                    </Button>
                </StackPanel>
                <GridSplitter x:Name="gridSplitter2" HorizontalAlignment="Left" Width="5" Grid.Column="2"/>
                <DataGrid Grid.Column="2" Margin="5,0,0,0" Name="fileHistoryDataGrid" ItemsSource="{Binding SelectedFileNode.FileBackupList}" AutoGenerateColumns="False" CanUserReorderColumns="False" CanUserSortColumns="False" GridLinesVisibility="Horizontal" CanUserResizeRows="False">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Backup Date" Binding="{Binding DateCreated}"/>
                        <DataGridTemplateColumn CanUserResize="False">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Height="25" Click="pushBackupButton_Click">
                                        <Image Source="{DynamicResource PushImageSource}"/>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn CanUserResize="False">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Height="25" Click="openBackupButton_Click">
                                        <Image Source="{DynamicResource FolderImageSource}"/>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </Grid>
        <Grid Grid.Row="2">
            <StatusBar DataContext="{Binding SelectedFileNode}">
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="50" />
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>
                <StatusBarItem Grid.Column="0">
                    <TextBlock Text="{Binding FullName}"/>
                </StatusBarItem>
                <StatusBarItem Grid.Column="1" HorizontalContentAlignment="Right">
                    <TextBlock>
                        <TextBlock.Text>
                            <MultiBinding StringFormat="Last Modified: {0:MM/dd/yyyy}">
                                <Binding Path="LastWriteTime" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </StatusBarItem>
                <StatusBarItem Grid.Column="2" HorizontalContentAlignment="Right">
                    <TextBlock Text="{Binding FileSize}"/>
                </StatusBarItem>
            </StatusBar>
        </Grid>
    </Grid>
</Window>
